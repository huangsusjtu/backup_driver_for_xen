#include <linux/list.h>
#include <linux/spinlock.h>
#include <linux/page.h>
#include <linux/slab.h>
#include <linux/file.h>
#include <linux/fs.h>
#include <asm/uaccess.h>
#include <linux/string.h>

#define ERR_HANDLE -1
#define MAGIC 0x12345678

struct backup_file_desc{                   //description for  backup file
	int magic;
	struct file* file_handle;
	loff_t start;
	loff_t end;
	spinlock_t f_lock;
	unsigned int block_size;
	unsigned int n_blocks; 
};

struct record_file_desc{                   //description for  record file
	struct file* file_handle;
	loff_t start;
	loff_t end;		
	spinlock_t f_lock;
};



struct record{                             // format for write into snapshot file
	long ts_nsec ;                     //timestamp
	size_t src ;
	size_t des ;
	unsigned int n_pages;                          
};



struct free_page{
	struct list_head list;
	struct page* page;
};

struct free_page_head{
	struct list_head list;
	spinlock_t page_lock;
	unsigned int length;
};

#define FREE_PAGE_SIZE 100;

#define INITED_HEAD -1
#define PAGE_ALLOC_ERR -2
#define NO_FREE_PAGE -3



long get_time(); // timestamp
bool read_record(struct record* rec);
bool write_record(struct record* rec);
bool read_blockfile_to_page(struct page* page);
bool write_page_to_blockfile(struct page* page);







